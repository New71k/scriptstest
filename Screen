--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.6) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v99=0;local v100;while true do if (v99==1) then return v100;end if (v99==0) then v100=v5(v84,v19);v19=nil;v99=1;end end else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=0 + 0 ;local v86;while true do if (v85==(0 -0)) then v86=(v31/(((5 + 0) -3)^(v32-(1 -0))))%((1639 -(1523 + 114))^(((v33-(2 -(958 -(892 + 65)))) -(v32-(620 -(555 + 64)))) + ((237 + 829) -(68 + 997)))) ;return v86-(v86%(932 -(857 + 74))) ;end end else local v87=(1272 -(226 + 1044))^(v32-(569 -(367 + (479 -278)))) ;return (((v31%(v87 + v87))>=v87) and (118 -(32 + 85))) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (3 -1) );v18=v18 + (3 -1) ;return (v36 * (606 -(87 + 263))) + v35 ;end local function v23() local v37=180 -(67 + 113) ;local v38;local v39;local v40;local v41;while true do if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (11 -8) );v18=v18 + (956 -(802 + 88 + 62)) ;v37=2 -1 ;end if (v37==(1 -0)) then return (v41 * (12211951 + 4565265)) + (v40 * ((87499 -20966) -(915 + (1269 -(1069 + 118))))) + (v39 * (724 -(1061 -593))) + v38 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1 -0 ;local v45=(v20(v43,1 + 0 ,35 -(9 + 6) ) * ((2 + (0 -0))^(823 -(368 + (1544 -1121))))) + v42 ;local v46=v20(v43,65 -44 ,49 -(10 + 8) );local v47=((v20(v43,(7 + 115) -(32 + 58) )==(443 -((1301 -(261 + 624)) + (92 -66)))) and  -1) or 1 ;if (v46==0) then if (v45==(0 -0)) then return v47 * 0 ;else local v91=0 + 0 ;while true do if (v91==(0 -(0 -0))) then v46=439 -((1004 -(814 + 45)) + 293) ;v44=430 -(44 + 386) ;break;end end end elseif (v46==(3533 -(998 + 488))) then return ((v45==(0 + 0)) and (v47 * ((1 + 0)/(1080 -(1020 + 60))))) or (v47 * NaN) ;end return v8(v47,v46-(1795 -(201 + 571)) ) * (v44 + (v45/((1140 -(116 + 1022))^(216 -164)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(1423 -(630 + 793))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;local v50={};for v65=4 -3 , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0 + 0 ;end)();while true do if (v67==(1637 -(1373 + 263))) then if (v51==(0 + 0)) then v52=(function() return function(v104,v105,v106) local v107=(function() return 0 + 0 ;end)();local v108=(function() return;end)();while true do if (v107==(0 -0)) then v108=(function() return 0 + 0 ;end)();while true do if (v108~=(0 -0)) then else local v166=(function() return 0 -0 ;end)();while true do if ((0 -0)==v166) then v104[v105-#"," ]=(function() return v106();end)();return v104,v105,v106;end end end end break;end end end;end)();v53=(function() return {};end)();v54=(function() return {};end)();v51=(function() return 1 + 0 ;end)();end if (v51~=(1 + 0)) then else local v96=(function() return 0;end)();while true do if ((1 + 0)==v96) then v57=(function() return v23();end)();v51=(function() return 398 -(115 + 281) ;end)();break;end if (v96==(0 -0)) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v96=(function() return 1;end)();end end end break;end if (v67==(0 + 0)) then if (v51~=(2 + 0)) then else local v97=(function() return 560 -(306 + 254) ;end)();local v98=(function() return;end)();while true do if (v97==(0 -0)) then v98=(function() return 0 -0 ;end)();while true do if (v98~=0) then else local v113=(function() return 1467 -(899 + 568) ;end)();while true do if (v113==(0 + 0)) then v58=(function() return {};end)();for v580= #",",v57 do local v581=(function() return 0 -0 ;end)();local v582=(function() return;end)();local v583=(function() return;end)();local v584=(function() return;end)();while true do if (v581~=1) then else v584=(function() return nil;end)();while true do if (v582==0) then v583=(function() return v21();end)();v584=(function() return nil;end)();v582=(function() return 604 -(268 + 335) ;end)();end if (1==v582) then if (v583== #">") then v584=(function() return v21()~=(867 -(550 + 317)) ;end)();elseif (v583==2) then v584=(function() return v24();end)();elseif (v583~= #"nil") then else v584=(function() return v25();end)();end v58[v580]=(function() return v584;end)();break;end end break;end if (0==v581) then v582=(function() return 0;end)();v583=(function() return nil;end)();v581=(function() return 1;end)();end end end v113=(function() return 1 -0 ;end)();end if (v113~=1) then else v98=(function() return 1 + 0 ;end)();break;end end end if (v98==(1 -0)) then v56[ #"91("]=(function() return v21();end)();v51=(function() return 3;end)();break;end end break;end end end if (v51==(814 -(569 + 242))) then for v101= #",",v23() do local v102=(function() return v21();end)();if (v20(v102, #"!", #"|")==(0 -0)) then local v109=(function() return 0 + 0 ;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v109==1) then local v115=(function() return 0 -0 ;end)();local v116=(function() return;end)();while true do if (v115==(1024 -(706 + 318))) then v116=(function() return 0;end)();while true do if ((1252 -(721 + 530))==v116) then v109=(function() return 287 -(134 + 151) ;end)();break;end if ((1665 -(970 + 695))~=v116) then else v112=(function() return {v22(),v22(),nil,nil};end)();if (v110==0) then local v681=(function() return 1990 -(582 + 1408) ;end)();local v682=(function() return;end)();while true do if (v681~=(0 -0)) then else v682=(function() return 0;end)();while true do if (v682~=(0 -0)) then else v112[ #"xxx"]=(function() return v22();end)();v112[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v110== #"]") then v112[ #"xxx"]=(function() return v23();end)();elseif (v110==(7 -5)) then v112[ #"asd"]=(function() return v23() -(2^(1840 -(1195 + 629))) ;end)();elseif (v110== #"xnx") then local v701=(function() return 0;end)();while true do if (v701~=0) then else v112[ #"91("]=(function() return v23() -(2^(20 -4)) ;end)();v112[ #"http"]=(function() return v22();end)();break;end end end v116=(function() return 1 + 0 ;end)();end end break;end end end if (v109==(243 -(187 + 54))) then if (v20(v111, #"[", #"<")== #"|") then v112[2]=(function() return v58[v112[782 -(162 + 618) ]];end)();end if (v20(v111,2,2)~= #" ") then else v112[ #"gha"]=(function() return v58[v112[ #"nil"]];end)();end v109=(function() return 1089 -(461 + 625) ;end)();end if (v109==(1291 -(993 + 295))) then if (v20(v111, #"xxx", #"nil")~= #"]") then else v112[ #"asd1"]=(function() return v58[v112[ #"0836"]];end)();end v53[v101]=(function() return v112;end)();break;end if ((0 + 0)==v109) then local v118=(function() return 0;end)();while true do if (v118~=1) then else v109=(function() return 1 + 0 ;end)();break;end if (v118~=(0 -0)) then else v110=(function() return v20(v102,2 -0 , #"91(");end)();v111=(function() return v20(v102, #".com",1 + 5 );end)();v118=(function() return 1;end)();end end end end end end for v103= #"{",v23() do v54,v103,v28=(function() return v52(v54,v103,v28);end)();end return v56;end v67=(function() return 1;end)();end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[1 + 1 ];local v64=v59[532 -((1626 -(855 + 365)) + 123) ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1770 -((4153 -2404) + 20) ;local v73= -(1 + 0);local v74={};local v75={...};local v76=v12("#",...) -(1323 -(1249 + 73)) ;local v77={};local v78={};for v88=0 + 0 ,v76 do if ((651<4442) and (v88>=v70)) then v74[v88-v70 ]=v75[v88 + (1146 -(466 + 679)) ];else v78[v88]=v75[v88 + 1 ];end end local v79=(v76-v70) + (2 -1) ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if ((v81<=(9 + 18)) or (1433==2686)) then if (v81<=(37 -24)) then if (v81<=6) then if ((v81<=(1902 -(106 + 1794))) or (4123==4457)) then if (v81<=(0 + 0)) then local v119=v80[1 + 2 ];local v120=v78[v119];for v165=v119 + ((1237 -(1030 + 205)) -1) ,v80[4] do v120=v120   .. v78[v165] ;end v78[v80[5 -3 ]]=v120;elseif (v81>1) then do return v78[v80[116 -(4 + 104 + 6) ]];end else v78[v80[2]]=v78[v80[587 -(57 + 527) ]] -v78[v80[1431 -(41 + 1386) ]] ;end elseif (v81<=(107 -(17 + 86))) then if ((v81==(3 + 0 + 0)) or (3972<=205)) then v78[v80[3 -1 ]][v80[3]]=v78[v80[11 -7 ]];v72=v72 + (167 -(122 + 44)) ;v80=v68[v72];v78[v80[2]][v80[5 -2 ]]=v80[12 -8 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[67 -((316 -(156 + 130)) + 35) ]][v80[3 + 0 ]]=v80[(2865 -1604) -(1043 + 214) ];v72=v72 + (3 -(2 -0)) ;v80=v68[v72];v78[v80[1214 -(323 + 889) ]]=v80[7 -4 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v72=v72 + (581 -(361 + 219)) ;v80=v68[v72];v78[v80[2]]=v80[323 -(53 + 267) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[415 -(15 + 398) ]]=v78[v80[3]];v72=v72 + (983 -(18 + 964)) ;v80=v68[v72];v78[v80[7 -5 ]]=v80[2 + (1 -0) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[853 -(12 + 8 + 830) ]];else local v188=69 -(10 + 59) ;local v189;local v190;local v191;while true do if (v188==(7 + 1 + 0)) then v189=v78[v190];for v669=v190 + (127 -(116 + 10)) ,v80[1 + 3 ] do v189=v189   .. v78[v669] ;end v78[v80[2]]=v189;v188=747 -(542 + 196) ;end if (((1 -0)==v188) or (195>=1804)) then v78[v80[2]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v188=2 + 0 ;end if ((v188==(0 + 0)) or (1382>2216)) then v189=nil;v190=nil;v191=nil;v188=2 -1 ;end if ((v188==(12 -7)) or (3766<1004)) then v80=v68[v72];v191=v80[1553 -(1126 + 425) ];v78[v191]=v78[v191](v78[v191 + 1 ]);v188=411 -(118 + 287) ;end if (v188==((172 -137) -26)) then v72=v72 + 1 ;v80=v68[v72];if (v78[v80[1123 -(118 + 1003) ]] or (2861==2459)) then v72=v72 + ((1165 -(671 + 492)) -1) ;else v72=v80[3];end break;end if ((1903<4021) and (v188==(381 -(142 + 235)))) then v80=v68[v72];v78[v80[9 -7 ]]=v78[v80[1 + 0 + 2 ]];v72=v72 + (978 -(553 + 424)) ;v188=5;end if ((v188==(10 -(1219 -(369 + 846)))) or (2270>=4130)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v188=7 + 0 + 0 ;end if (v188==(2 + 1)) then v80=v68[v72];v78[v80[1 + 1 ]]=v61[v80[3 + 0 ]];v72=v72 + (1946 -(1036 + 909)) + 0 ;v188=4;end if ((2593<=3958) and (v188==((4 + 0) -2))) then v191=v80[2 -0 ];v78[v191]=v78[v191](v78[v191 + (2 -1) ]);v72=v72 + (2 -(204 -(11 + 192))) ;v188=3;end if ((1176==1176) and ((4 + 3)==v188)) then v72=v72 + (176 -(135 + 40)) + 0 ;v80=v68[v72];v190=v80[(33 -19) -11 ];v188=761 -(239 + 514) ;end end end elseif (v81==(2 + 3)) then if ((1784<2184) and  not v78[v80[2 + 0 ]]) then v72=v72 + (1330 -(797 + 532)) ;else v72=v80[3];end else local v192=v78[v80[3 + (2 -1) ]];if v192 then v72=v72 + 1 + (0 -0) ;else v78[v80[4 -2 ]]=v192;v72=v80[3];end end elseif (v81<=(1211 -(373 + 829))) then if (v81<=((914 -(50 + 126)) -(476 + 255))) then if ((v78[v80[1132 -(369 + 761) ]]~=v78[v80[4]]) or (3062==1818)) then v72=v72 + 1 + 0 ;else v72=v80[5 -2 ];end elseif (v81==8) then do return;end else v78[v80[2]]=v80[5 -2 ]~=(238 -(64 + (484 -310))) ;end elseif ((v81<=(2 + 9)) or (3717<3149)) then if ((v81==(14 -4)) or (1649>4231)) then local v195=v80[338 -(144 + 192) ];do return v13(v78,v195,v73);end else local v196=216 -(42 + 174) ;local v197;local v198;while true do if (v196==(3 + 0)) then v72=v72 + 1 + 0 ;v80=v68[v72];v198=v80[1 + 1 ];v196=1508 -(363 + 1141) ;end if ((3193==3193) and (v196==(1580 -(1183 + 397)))) then v197=nil;v198=nil;v198=v80[5 -3 ];v196=1 + 0 + 0 ;end if ((3195<3730) and (v196==(5 + 1))) then if v78[v80[(3390 -(1233 + 180)) -(1913 + 62) ]] then v72=v72 + 1 + (969 -(522 + 447)) ;else v72=v80[3];end break;end if ((v196==(10 -6)) or (3495>4306)) then v78[v198]=v78[v198](v13(v78,v198 + 1 ,v80[3]));v72=v72 + (1934 -(565 + 1368)) ;v80=v68[v72];v196=18 -13 ;end if ((2797<=3980) and (v196==(1662 -(1477 + 184)))) then v197=v78[v80[3 -(1421 -(107 + 1314)) ]];v78[v198 + 1 + 0 ]=v197;v78[v198]=v197[v80[(400 + 460) -(564 + 292) ]];v196=2 -0 ;end if ((1944<=2368) and (v196==(5 -3))) then v72=v72 + (305 -(244 + (182 -122))) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[479 -(41 + 435) ];v196=3;end if (v196==(3 + 2)) then v78[v80[(1991 -988) -(938 + 63) ]]=v78[v80[3]][v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v196=1131 -(936 + 189) ;end end end elseif ((1709<4248) and (v81>(4 + 8))) then local v199=v80[1615 -(1565 + 48) ];v78[v199](v78[v199 + 1 + 0 ]);else local v200=1138 -(782 + 356) ;while true do if ((4001>3798) and (v200==(270 -(176 + (360 -269))))) then v78[v80[4 -2 ]]=v78[v80[(1914 -(716 + 1194)) -1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v200=1096 -(975 + 117) ;end if (v200==1) then v78[v80[(202 + 1675) -(157 + 1718) ]][v80[3]]=v80[4 + 0 ];v72=v72 + (3 -2) ;v80=v68[v72];v200=6 -4 ;end if ((v200==2) or (4688<=4499)) then v78[v80[1020 -((1200 -(74 + 429)) + 321) ]][v80[7 -4 ]]=v80[4];v72=v72 + (1 -0) ;v80=v68[v72];v200=6 -(5 -2) ;end if ((v200==5) or (3970==3202)) then v78[v80[1 + 1 + 0 ]]=v78[v80[5 -2 ]][v80[10 -6 ]];v72=v72 + (1228 -(322 + 905)) ;v80=v68[v72];v200=617 -(602 + 9) ;end if (((1189 -(449 + (1693 -953)))==v200) or (3918>=4397) or (1567<=319)) then v78[v80[2]][v80[875 -(826 + 46) ]]=v80[951 -(245 + 702) ];v72=v72 + (3 -2) ;v80=v68[v72];v200=1 + 0 ;end if (v200==((1346 + 556) -(260 + 1638))) then v78[v80[442 -((1177 -795) + 58) ]]=v60[v80[9 -6 ]];v72=v72 + (2 -1) + 0 ;v80=v68[v72];v200=5;end if (v200==(11 -5)) then if (v78[v80[5 -3 ]]~=v78[v80[1209 -(902 + (736 -(279 + 154))) ]]) then v72=v72 + (1 -(778 -(454 + 324))) ;else v72=v80[6 -(3 + 0) ];end break;end end end elseif ((v81<=(2 + 18)) or (4583==3761)) then if ((v81<=(1706 -(1121 + 569))) or (780==3185)) then if (v81<=(228 -(22 + 192))) then local v122;local v123;v78[v80[2]]=v61[v80[3]];v72=v72 + (684 -(483 + 200)) ;v80=v68[v72];v123=v80[1465 -(1404 + 59) ];v122=v78[v80[3]];v78[v123 + ((19 -(12 + 5)) -1) ]=v122;v78[v123]=v122[v80[4]];v72=v72 + (1 -(0 + 0)) ;v80=v68[v72];v78[v80[767 -(468 + 297) ]]=v80[565 -(334 + 228) ];v72=v72 + (3 -2) ;v80=v68[v72];v123=v80[4 -2 ];v78[v123]=v78[v123](v13(v78,v123 + (2 -1) ,v80[5 -2 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v123=v80[(88 + 150) -(141 + (1188 -(277 + 816))) ];v122=v78[v80[3 + 0 ]];v78[v123 + (2 -1) ]=v122;v78[v123]=v122[v80[4]];v72=v72 + 1 ;v80=v68[v72];v123=v80[4 -2 ];v78[v123]=v78[v123](v78[v123 + 1 ]);v72=v72 + 1 + 0 ;v80=v68[v72];v60[v80[3]]=v78[v80[8 -6 ]];v72=v72 + (2 -(1184 -(1058 + 125))) ;v80=v68[v72];do return;end elseif ((3454>1580) and (v81>(11 + 4))) then local v201=v80[2 + 0 ];v78[v201]=v78[v201](v78[v201 + (1 -0) ]);else local v203;local v204;v78[v80[2]]=v80[2 + 1 ];v72=v72 + (164 -(92 + 71)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[767 -(574 + 191) ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v204=v80[7 -4 ];v203=v78[v204];for v516=v204 + 1 + 0 ,v80[853 -(254 + 595) ] do v203=v203   .. v78[v516] ;end v78[v80[128 -(55 + 71) ]]=v203;v72=v72 + (1 -0) ;v80=v68[v72];do return v78[v80[1792 -(573 + 229 + 988) ]];end v72=v72 + 1 ;v80=v68[v72];do return;end end elseif ((v81<=(49 -31)) or (1607==20)) then if ((v81==(2 + (990 -(815 + 160)))) or (962>=4666)) then v78[v80[2 -0 ]][v80[3]]=v78[v80[943 -((3063 -2349) + 225) ]];else local v217=0 -0 ;local v218;while true do if ((0 -0)==v217) then v218=v80[2];v78[v218]=v78[v218]();break;end end end elseif (v81==(3 + 16)) then v78[v80[(4 -2) -0 ]]=v78[v80[809 -(118 + 688) ]][v80[52 -(25 + 23) ]];else v78[v80[2]][v80[1 + 1 + 1 ]]=v80[1890 -(927 + 959) ];end elseif ((v81<=((225 -148) -54)) or (3202>=4075)) then if (v81<=(753 -(16 + 716))) then local v140=0 -(1898 -(41 + 1857)) ;local v141;local v142;while true do if ((64==64) and (v140==4)) then v80=v68[v72];v142=v80[99 -(11 + (1979 -(1222 + 671))) ];v141=v78[v80[3]];v78[v142 + (2 -1) ]=v141;v78[v142]=v141[v80[4]];v140=290 -(175 + 110) ;end if ((2202>=694) and (v140==(17 -10))) then v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[1798 -(503 + 1293) ]]=v80[7 -4 ];break;end if ((v140==(16 -10)) or (1896==1708)) then v142=v80[2];v78[v142]=v78[v142](v13(v78,v142 + 1 + 0 ,v80[1064 -(810 + 251) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3 + 0 ]][v80[537 -(43 + (704 -214)) ]];v140=740 -(711 + 22) ;end if ((11 -(1190 -(229 + 953)))==v140) then v78[v142]=v78[v142](v13(v78,v142 + (860 -(240 + 619)) ,v80[(1775 -(1111 + 663)) + 2 ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v61[v80[1 + 2 ]];v72=v72 + (1745 -((2923 -(874 + 705)) + 400)) ;v140=4;end if ((3706<=3900) and (v140==(410 -(255 + 150)))) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (4 -3) ;v80=v68[v72];v140=19 -13 ;end if ((2890>2617) and (v140==(1741 -(404 + 1335)))) then v80=v68[v72];v78[v80[408 -(183 + 223) ]]=v80[3 -0 ];v72=v72 + 1 ;v80=v68[v72];v142=v80[2 + 0 ];v140=2 + 1 ;end if ((3985>=1284) and (v140==(338 -(10 + 327)))) then v142=v80[2 + 0 + 0 ];v141=v78[v80[3]];v78[v142 + (339 -(118 + 220)) ]=v141;v78[v142]=v141[v80[2 + 2 ]];v72=v72 + (450 -(108 + 341)) ;v140=1 + 1 ;end if (v140==(0 -0)) then v141=nil;v142=nil;v78[v80[1495 -(711 + 782) ]]=v61[v80[5 -2 ]];v72=v72 + (470 -(270 + 199)) ;v80=v68[v72];v140=1 + 0 ;end end elseif ((v81>(1841 -(580 + 1239))) or (1987==545)) then local v223;local v224;local v225;local v226;v78[v80[5 -3 ]]=v78[v80[3 + 0 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[7 -4 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[1170 -(645 + 522) ]];v72=v72 + ((3722 -1931) -(1010 + 780)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[14 -11 ];v72=v72 + ((1 + 1) -1) ;v80=v68[v72];v226=v80[1839 -(1045 + 791) ];v225=v78[v226];for v550=v226 + 1 ,v80[9 -5 ] do v225=v225   .. v78[v550] ;end v78[v80[2]]=v225;v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[4 -1 ]]=v78[v80[509 -(351 + 154) ]];v72=v72 + (1575 -(1281 + 293)) ;v80=v68[v72];v78[v80[268 -(28 + 238) ]][v80[6 -3 ]]=v80[1563 -((2060 -(642 + 37)) + 178) ];v72=v72 + 1 + 0 ;v80=v68[v72];v224=v80[2 + 0 ];v223=v78[v224];v226=v80[3];for v551=1 + 0 + 0 ,v226 do v223[v551]=v78[v224 + v551 ];end else local v245;local v246;v78[v80[6 -4 ]]=v61[v80[2 + 1 ]];v72=v72 + (471 -(381 + 89)) ;v80=v68[v72];v246=v80[2 + 0 ];v245=v78[v80[3 + 0 ]];v78[v246 + (1 -0) ]=v245;v78[v246]=v245[v80[1160 -(1074 + 82) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1 + 2) -1 ]]=v80[1787 -(214 + 1570) ];v72=v72 + (1456 -((2485 -1495) + 465)) ;v80=v68[v72];v246=v80[1 + (455 -(233 + 221)) ];v78[v246]=v78[v246](v13(v78,v246 + (2 -1) ,v80[2 + 1 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v246=v80[7 -5 ];v245=v78[v80[3]];v78[v246 + (1727 -(1668 + 58)) ]=v245;v78[v246]=v245[v80[630 -(512 + 114) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[3 -1 ]]=v61[v80[10 -7 ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]][v80[4 + (1541 -(718 + 823)) ]];v72=v72 + (3 -(2 + 0)) ;v80=v68[v72];v246=v80[(2801 -(266 + 539)) -(109 + 1885) ];v78[v246]=v78[v246](v13(v78,v246 + 1 ,v80[1472 -(1269 + 200) ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[(2313 -1496) -(98 + 717) ]]=v78[v80[829 -(802 + 24) ]][v80[6 -(1227 -(636 + 589)) ]];v72=v72 + 1 ;v80=v68[v72];do return v78[v80[2 -0 ]];end v72=v72 + 1 + 0 ;v80=v68[v72];do return;end end elseif ((v81<=(20 + (11 -6))) or (4896<1261)) then if (v81>24) then v78[v80[2]]=v78[v80[1 + 2 ]];else local v271=0 + 0 ;local v272;while true do if (v271==(0 -0)) then v272=v80[(11 -5) -(4 + 0) ];v78[v272]=v78[v272](v13(v78,v272 + 1 + 0 + 0 ,v80[3]));break;end end end elseif (v81>(11 + 15)) then local v273=0 + 0 ;local v274;local v275;local v276;while true do if ((23<3610) and (v273==3)) then v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(2450 -(657 + 358)) -(797 + 636) ]]=v80[14 -11 ];v273=4;end if (v273==(1619 -(1427 + (507 -315)))) then v274=nil;v275=nil;v276=nil;v276=v80[4 -2 ];v273=1 + 0 ;end if ((v273==1) or (3355>4385)) then v275={v78[v276](v78[v276 + 1 + 0 ])};v274=0;for v670=v276,v80[2 + 0 + 2 ] do local v671=326 -(192 + 134) ;while true do if ((v671==0) or (3911<2578)) then v274=v274 + 1 ;v78[v670]=v275[v274];break;end end end v72=v72 + 1 ;v273=1278 -(316 + 960) ;end if (v273==(2 + 0)) then v80=v68[v72];v78[v80[2]]=v78[v80[3 + 0 ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v273=11 -(23 -15) ;end if ((v273==(555 -(83 + 468))) or (4238<87)) then v72=v72 + (1807 -(1202 + 604)) ;v80=v68[v72];v72=v80[13 -10 ];break;end end else v78[v80[2 -0 ]]={};end elseif (v81<=(113 -72)) then if ((2538==2538) and (v81<=(359 -(45 + 280)))) then if (v81<=(1862 -(1552 + 280))) then if ((v81<=28) or (3067<=2195)) then v78[v80[2 + 0 ]]=v29(v69[v80[3]],nil,v61);elseif (v81==29) then local v278=v80[(836 -(64 + 770)) + 0 ];local v279=v78[v278];local v280=v80[3];for v554=1 + 0 ,v280 do v279[v554]=v78[v278 + v554 ];end else local v281;local v282;v78[v80[2 + 0 + 0 ]]=v61[v80[1 + 2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v282=v80[1913 -(340 + (3566 -1995)) ];v281=v78[v80[2 + 1 ]];v78[v282 + (1773 -(1733 + 39)) ]=v281;v78[v282]=v281[v80[10 -6 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1036 -(125 + 909) ]]=v80[1951 -(1096 + 852) ];v72=v72 + 1 + 0 ;v80=v68[v72];v282=v80[2 -0 ];v78[v282]=v78[v282](v13(v78,v282 + 1 ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v282=v80[514 -(73 + 336 + 103) ];v281=v78[v80[239 -(46 + 190) ]];v78[v282 + 1 ]=v281;v78[v282]=v281[v80[99 -(51 + 44) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v61[v80[3]];v72=v72 + (1244 -(157 + 1086)) + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[(2642 -1322) -(1114 + 203) ]][v80[730 -(228 + (2181 -1683)) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v282=v80[2];v78[v282]=v78[v282](v13(v78,v282 + 1 + 0 ,v80[666 -(174 + 489) ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1907 -(830 + 1075) ]]=v78[v80[3]][v80[4]];v72=v72 + (525 -(303 + (338 -117))) ;v80=v68[v72];do return v78[v80[1271 -((314 -83) + 1038) ]];end v72=v72 + 1 + 0 ;v80=v68[v72];do return;end end elseif (v81<=((2013 -(599 + 220)) -(171 + (1973 -982)))) then if (v81>(127 -96)) then if ((4122==4122) and (v80[5 -(1934 -(1813 + 118)) ]==v78[v80[9 -(4 + 1) ]])) then v72=v72 + 1 + 0 ;else v72=v80[10 -7 ];end else v78[v80[(1222 -(841 + 376)) -3 ]]=v60[v80[4 -1 ]];end elseif ((v81==(101 -68)) or (2371>2654)) then local v306=v80[1250 -(111 + 1137) ];do return v78[v306](v13(v78,v306 + (159 -(91 + 67)) ,v80[8 -5 ]));end else local v307;v78[v80[1 + 1 ]]=v61[v80[526 -(423 + 100) ]];v72=v72 + (1 -0) + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[2 + 1 ]][v80[775 -(76 + 250 + 445) ]];v72=v72 + (4 -3) ;v80=v68[v72];v307=v80[4 -2 ];v78[v307]=v78[v307]();v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[714 -(530 + 181) ]] * v80[885 -(614 + 267) ] ;v72=v72 + (33 -(19 + (35 -22))) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[6 -3 ]] * v80[4] ;v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[3]] * v80[2 + (861 -(464 + 395)) ] ;v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v78[v80[2]]=v78[v80[6 -3 ]] -v78[v80[1816 -(1293 + 519) ]] ;v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v61[v80[7 -4 ]];v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v78[v80[8 -6 ]]=v78[v80[3]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[2 + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[839 -(467 + 370) ]]=v78[v80[3]];v72=v72 + (2 -1) ;v80=v68[v72];v307=v80[1 + 1 ];v78[v307]=v78[v307](v13(v78,v307 + 1 + 0 ,v80[2 + 1 ]));v72=v72 + (1097 -(709 + 387)) ;v80=v68[v72];v78[v80[2]]=v61[v80[(3845 -1984) -(673 + 1185) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[6 -(3 + 1) ]]=v80[4 -1 ];v72=v72 + (3 -2) + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3 + 0 ]][v80[5 -1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[(1 + 4) -2 ]][v80[4]];v72=v72 + (1881 -(446 + 1434)) ;v80=v68[v72];v78[v80[1285 -(1040 + 243) ]]=v78[v80[8 -5 ]][v80[1851 -(559 + 1288) ]];v72=v72 + 1 ;v80=v68[v72];v307=v80[2];do return v78[v307](v13(v78,v307 + 1 ,v80[1934 -(609 + 1322) ]));end v72=v72 + (455 -(13 + 441)) ;v80=v68[v72];v307=v80[7 -5 ];do return v13(v78,v307,v73);end v72=v72 + 1 ;v80=v68[v72];do return;end end elseif ((3025>=2813) and (v81<=(96 -59))) then if ((v81<=35) or (3466>4520)) then local v144;local v145;v78[v80[2]]=v61[v80[3]];v72=v72 + (4 -3) ;v80=v68[v72];v145=v80[1 + 1 ];v144=v78[v80[10 -7 ]];v78[v145 + 1 + 0 ]=v144;v78[v145]=v144[v80[2 + 2 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[4 -1 ];v72=v72 + 1 ;v80=v68[v72];v145=v80[2 + 0 ];v78[v145]=v78[v145](v13(v78,v145 + 1 + 0 ,v80[(6 -3) + 0 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v145=v80[2 + 0 ];v144=v78[v80[436 -((673 -(150 + 370)) + 280) ]];v78[v145 + (2 -(1283 -(74 + 1208))) ]=v144;v78[v145]=v144[v80[4 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v145=v80[2 + 0 ];v78[v145]=v78[v145](v78[v145 + 1 + (0 -0) ]);v72=v72 + 1 ;v80=v68[v72];if v78[v80[2 + 0 ]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==36) then local v336=v80[2 -0 ];local v337=v78[v80[3]];v78[v336 + (4 -3) ]=v337;v78[v336]=v337[v80[3 + 1 ]];else local v341;local v342;local v343;v78[v80[(477 + 192) -(89 + (968 -(14 + 376))) ]][v80[3]]=v78[v80[3 + 1 ]];v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (1050 -(572 + 477)) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v80[2 + 1 + 1 ];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[88 -(84 + 2) ]][v80[4 -1 ]]=v78[v80[3 + 1 ]];v72=v72 + (843 -(497 + 330 + 15)) ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(3911 -2576) -(605 + 728) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[1 + 2 ]];v72=v72 + (3 -2) ;v80=v68[v72];v343=v80[2];v342=v78[v343];v341=v80[3];for v557=1 + 0 ,v341 do v342[v557]=v78[v343 + v557 ];end end elseif ((v81<=(107 -68)) or (951>=1027)) then if (v81>(29 + 9)) then if (v78[v80[491 -(457 + 32) ]]==v80[4]) then v72=v72 + 1 + 0 ;else v72=v80[1405 -(832 + 570) ];end else v72=v80[3 + 0 + 0 ];end elseif (v81>40) then v78[v80[1 + 1 ]]=v61[v80[10 -7 ]];else v78[v80[1 + 1 ]]=v80[3];end elseif (v81<=(844 -(588 + 208))) then if ((2412>=356) and (v81<=(118 -74))) then if (v81<=42) then local v160=1800 -(884 + 916) ;local v161;local v162;while true do if (v160==((78 -(23 + 55)) -0)) then v161=v80[(4 -2) + 0 ];v162=v78[v161];v160=654 -(232 + 421) ;end if (((2070>1171) and (v160==(1 + 0))) or (1369>2250)) then for v590=v161 + (1890 -(1569 + 320)) ,v80[1 + 2 ] do v7(v162,v78[v590]);end break;end end elseif (v81>(9 + 34)) then v78[v80[6 -4 ]]=v78[v80[3]] * v80[609 -(316 + 289) ] ;else local v364;v78[v80[5 -(3 + 0) ]][v80[1 + 2 ]]=v78[v80[1457 -(666 + 787) ]];v72=v72 + ((660 -234) -(360 + 65)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[257 -(79 + 175) ]]=v78[v80[4]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[8 -5 ]]=v80[7 -3 ];v72=v72 + (900 -(503 + 396)) ;v80=v68[v72];v78[v80[2]][v80[184 -(92 + 89) ]]=v78[v80[7 -3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -5 ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v364=v80[4 -2 ];v78[v364](v78[v364 + 1 + 0 ]);end elseif (v81<=(22 + 24)) then if ((v81==(136 -91)) or (4108<3934)) then local v378=v69[v80[1 + 2 ]];local v379;local v380={};v379=v10({},{__index=function(v562,v563) local v564=v380[v563];return v564[1][v564[2 -0 ]];end,__newindex=function(v565,v566,v567) local v568=v380[v566];v568[1245 -(485 + 759) ][v568[4 -2 ]]=v567;end});for v570=1190 -(442 + 747) ,v80[1139 -(832 + 303) ] do v72=v72 + 1 ;local v571=v68[v72];if (v571[947 -(88 + 858) ]==25) then v380[v570-(1 + 0) ]={v78,v571[792 -(766 + 23) ]};else v380[v570-(4 -3) ]={v60,v571[3]};end v77[ #v77 + (2 -1) ]=v380;end v78[v80[6 -4 ]]=v29(v378,v379,v61);elseif (v78[v80[1075 -(1036 + 37) ]]==v78[v80[3 + 1 ]]) then v72=v72 + (1 -0) ;else v72=v80[3 + 0 ];end elseif (v81==(1527 -(641 + 839))) then local v382=0;local v383;while true do if ((3499>=3439) and (v382==(913 -(910 + 3)))) then v383=v78[v80[4]];if ( not v383 or (937>3786)) then v72=v72 + (2 -1) ;else local v680=(530 + 1154) -(1466 + 218) ;while true do if ((v680==(0 + 0)) or (901>4218)) then v78[v80[1150 -(556 + 592) ]]=v383;v72=v80[2 + 1 ];break;end end end break;end end else local v384=v80[810 -(329 + 479) ];local v385={v78[v384](v78[v384 + 1 ])};local v386=0;for v573=v384,v80[13 -9 ] do local v574=0 -0 ;while true do if (v574==(0 + 0)) then v386=v386 + 1 ;v78[v573]=v385[v386];break;end end end end elseif (v81<=51) then if ((4779>4047) and (v81<=(788 -(396 + (917 -574))))) then v60[v80[1 + 2 ]]=v78[v80[2]];elseif ((876<3303) and (v81==(1527 -(29 + 1448)))) then local v387=1389 -(135 + 1254) ;local v388;while true do if ((4050>1373) and (v387==(0 -0))) then v388=v80[(1877 -(708 + 1160)) -7 ];do return v13(v78,v388,v388 + v80[2 + 1 ] );end break;end end elseif ((2922<=3562) and v78[v80[1529 -(389 + 1138) ]]) then v72=v72 + (575 -(102 + 472)) ;else v72=v80[3 + (0 -0) ];end elseif ((v81<=53) or (1037>4390)) then if (v81>52) then local v389=0 + 0 ;local v390;local v391;while true do if ((2619>=1322) and ((1 + 0)==v389)) then for v674=1, #v77 do local v675=1545 -(320 + 1225) ;local v676;while true do if (v675==(0 -0)) then v676=v77[v674];for v690=(0 -0) + 0 , #v676 do local v691=1464 -(157 + 1307) ;local v692;local v693;local v694;while true do if (v691==(1860 -((848 -(10 + 17)) + 1038))) then v694=v692[2];if ((1407<=1919) and (4133>=2404) and (v693==v78) and (v694>=v390)) then local v702=0;while true do if (v702==(0 -(0 + 0))) then v391[v694]=v693[v694];v692[1]=v391;break;end end end break;end if (v691==(0 + 0)) then v692=v676[v690];v693=v692[1 -0 ];v691=1 + 0 ;end end end break;end end end break;end if (v389==((1732 -(1400 + 332)) -0)) then v390=v80[1028 -(834 + (367 -175)) ];v391={};v389=1;end end else local v392;local v393;local v394;v394=v80[2];v393=v78[v80[1 + 2 ]];v78[v394 + 1 + 0 ]=v393;v78[v394]=v393[v80[1 + 3 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1910 -(242 + 1666) ]]=v80[307 -(300 + 2 + 2) ];v72=v72 + 1 ;v80=v68[v72];v394=v80[1 + 1 ];v78[v394]=v78[v394](v13(v78,v394 + (2 -1) ,v80[365 -(112 + 250) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[2 + 1 ]][v80[3 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]][v80[3 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[1417 -(1001 + 413) ]][v80[8 -4 ]];v72=v72 + (883 -(244 + 638)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[696 -(627 + 66) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v61[v80[605 -(512 + 90) ]];v72=v72 + (1907 -(1665 + 241)) ;v80=v68[v72];v394=v80[2];v393=v78[v80[3]];v78[v394 + 1 ]=v393;v78[v394]=v393[v80[721 -(373 + 294 + 50) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (941 -(850 + 90)) + (0 -0) ;v80=v68[v72];v394=v80[5 -3 ];v78[v394]=v78[v394](v13(v78,v394 + (1 -(1390 -(360 + 1030))) ,v80[3]));v72=v72 + (1100 -(35 + 1064)) ;v80=v68[v72];v78[v80[2]]=v78[v80[3 + 0 ]][v80[8 -4 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1238 -(264 + 34 + 938) ]]=v78[v80[3]][v80[1263 -(233 + 1026) ]];v72=v72 + (1667 -(636 + 1030)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]][v80[4 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v393=v80[1 + 2 ];v392=v78[v393];for v575=v393 + (222 -(55 + 166)) ,v80[1 + 3 ] do v392=v392   .. v78[v575] ;end v78[v80[2]]=v392;v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -5 ]]=v78[v80[300 -(36 + 261) ]];v72=v72 + (1 -0) ;v80=v68[v72];v394=v80[1370 -(34 + 1334) ];v78[v394]=v78[v394]();v72=v72 + 1 ;v80=v68[v72];v78[v80[(2 -1) + 1 ]]=v78[v80[3 + 0 ]];v72=v72 + (1284 -(1035 + 248)) ;v80=v68[v72];v394=v80[23 -(20 + 1) ];v78[v394]=v78[v394]();v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[3]];v72=v72 + (320 -(134 + 185)) ;v80=v68[v72];v78[v80[(1561 -426) -(549 + 584) ]]=v78[v80[688 -(314 + 371) ]][v80[13 -9 ]];v72=v72 + (969 -(478 + 490)) ;v80=v68[v72];v78[v80[2 + (1661 -(909 + 752)) ]]=v78[v80[1175 -(786 + 386) ]];v72=v72 + 1 ;v80=v68[v72];v394=v80[6 -4 ];v78[v394]=v78[v394]();v72=v72 + ((2603 -(109 + 1114)) -(1055 + 324)) ;v80=v68[v72];v78[v80[2]]=v78[v80[1343 -((2000 -907) + 247) ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v394=v80[1 + 1 ];v78[v394]=v78[v394]();v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[(248 -(6 + 236)) -4 ]]=v78[v80[8 -5 ]];v72=v72 + (2 -1) ;v80=v68[v72];v394=v80[1 + 1 ];v78[v394]=v78[v394]();v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v61[v80[10 -7 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v394=v80[2];v393=v78[v80[7 -4 ]];v78[v394 + 1 ]=v393;v78[v394]=v393[v80[692 -(364 + 324) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -(2 + 1) ]]=v80[6 -3 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[(10 + 2) -9 ]~=(0 -0) ;v72=v72 + 1 ;v80=v68[v72];v394=v80[2];v78[v394]=v78[v394](v13(v78,v394 + ((4 -2) -1) ,v80[1271 -(1249 + 19) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[11 -8 ]];v72=v72 + (1087 -(686 + 400)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[232 -(73 + 156) ]][v80[1 + 3 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[813 -(721 + 90) ]]=v80[1 + 2 ];v72=v72 + (3 -2) ;v80=v68[v72];v394=v80[472 -(224 + (429 -183)) ];v78[v394]=v78[v394](v78[v394 + (1 -0) ]);v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v61[v80[1 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[1136 -(1076 + 57) ]][v80[4]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[6 -4 ]]=v80[516 -(203 + 310) ];v72=v72 + ((328 + 1666) -(1238 + 755)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1537 -(709 + 825) ]][v80[7 -3 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[867 -(196 + 668) ]][v80[15 -11 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -(690 -(579 + 110)) ]]=v78[v80[3]][v80[4]];v72=v72 + (834 -(171 + 662)) ;v80=v68[v72];v78[v80[95 -(4 + 89) ]]=v78[v80[10 -7 ]][v80[2 + 1 + 1 ]];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1489 -(35 + 1451) ]][v80[1457 -(28 + 1425) ]];v72=v72 + (1994 -(941 + 1052)) ;v80=v68[v72];v78[v80[2 + 0 + 0 + 0 ]]=v78[v80[3]][v80[1518 -(822 + 692) ]];v72=v72 + (1 -0) ;v80=v68[v72];v394=v80[2];v78[v394]=v78[v394](v13(v78,v394 + 1 + 0 ,v80[300 -(45 + 252) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(408 -(174 + 233)) + 1 ]]={};v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[435 -(114 + 319) ]][v80[3]]=v80[5 -1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[4 -1 ]]=v80[(22 -14) -4 ];v72=v72 + (1964 -(556 + 1407)) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + (1207 -(741 + 465)) ;v80=v68[v72];v78[v80[467 -(170 + 295) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[7 -4 ]]=v80[4 + 0 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[2 + 1 ];v72=v72 + (1231 -(957 + 273)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]];v72=v72 + ((4 -1) -2) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[3];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[9 -7 ]]=v78[v80[3]];v72=v72 + (1781 -(389 + 1391)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[2 + 1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1178 -(663 + 511)) -2 ]]=v80[3];v72=v72 + ((850 + 102) -(783 + 168)) ;v80=v68[v72];v78[v80[6 -4 ]]=v78[v80[3 + 0 ]];v72=v72 + (312 -(309 + 2)) ;v80=v68[v72];v78[v80[(2 + 3) -3 ]]=v80[1215 -(1090 + (375 -253)) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -(3 + 1) ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1120 -(628 + 490) ]]=v80[1 + 2 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[9 -7 ]]=v78[v80[(1829 -1052) -(431 + 343) ]];v72=v72 + ((2 -1) -0) ;v80=v68[v72];v78[v80[5 -(2 + 1) ]]=v78[v80[3 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v394=v80[1697 -(556 + 1139) ];v78[v394]=v78[v394](v78[v394 + (16 -((11 -5) + 9)) ]);v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[172 -(28 + 141) ];v72=v72 + 1 + 0 ;v80=v68[v72];v393=v80[3 -0 ];v392=v78[v393];for v576=v393 + 1 + 0 ,v80[1321 -(486 + 593 + 238) ] do v392=v392   .. v78[v576] ;end v78[v80[5 -3 ]]=v392;v72=v72 + ((1 + 2) -2) ;v80=v68[v72];v78[v80[2]][v80[1 + 2 ]]=v78[v80[(734 -(478 + 244)) -8 ]];v72=v72 + (1264 -(668 + 595)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[1 + 2 ]]=v80[(527 -(440 + 77)) -6 ];v72=v72 + ((133 + 158) -(23 + 267)) ;v80=v68[v72];v78[v80[1946 -(1129 + 815) ]]={};v72=v72 + (388 -(371 + 16)) ;v80=v68[v72];v78[v80[2]][v80[3]]=v80[4];v72=v72 + (1751 -(1326 + 424)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[10 -(25 -18) ];v72=v72 + (119 -((1644 -(655 + 901)) + 30)) ;v80=v68[v72];v78[v80[773 -(720 + 51) ]]=v78[v80[6 -3 ]];v72=v72 + (1777 -(421 + 1355)) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[2 + 1 ];v72=v72 + (1084 -(286 + 797)) ;v80=v68[v72];v78[v80[(2 + 5) -5 ]]=v78[v80[4 -1 ]];v72=v72 + (440 -(397 + 42)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[803 -(24 + 776) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[787 -(222 + 563) ]]=v78[v80[6 -(3 + 0) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[192 -(23 + 113 + 54) ]]=v80[1801 -(690 + 1108) ];v72=v72 + (3 -2) + 0 ;v80=v68[v72];v393=v80[3 + 0 ];v392=v78[v393];for v577=v393 + (849 -(40 + 808)) ,v80[1 + 3 ] do v392=v392   .. v78[v577] ;end v78[v80[(1452 -(695 + 750)) -5 ]]=v392;end elseif (v81>(52 + 2)) then for v578=v80[2 + (0 -0) ],v80[(2 -0) + 1 ] do v78[v578]=nil;end else local v502;local v503;v503=v80[2];v502=v78[v80[574 -(47 + (2107 -1583)) ]];v78[v503 + 1 + 0 ]=v502;v78[v503]=v502[v80[10 -6 ]];v72=v72 + ((352 -(285 + 66)) -0) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[3]];v72=v72 + (1727 -(1165 + 561)) ;v80=v68[v72];v503=v80[1 + 1 ];v78[v503]=v78[v503](v13(v78,v503 + (3 -2) ,v80[2 + (2 -1) ]));v72=v72 + (480 -(341 + 138)) ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + ((1311 -(682 + 628)) -0) ;v80=v68[v72];v78[v80[328 -(89 + 237) ]][v80[(2 + 7) -6 ]]=v80[8 -4 ];end v72=v72 + (882 -(581 + 300)) ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
